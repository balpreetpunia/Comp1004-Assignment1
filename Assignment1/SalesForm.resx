<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>